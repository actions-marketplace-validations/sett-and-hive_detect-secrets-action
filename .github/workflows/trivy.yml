# A workflow that runs Trivy to scan the action Docker image

name: Trivy workflow

on:
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '32 12 * * 0'
  workflow_dispatch:

env:
  BRANCH_NAME: ${{ github.ref_name }}

permissions:
  contents: read

jobs:
  trivy:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: Build
    runs-on: ubuntu-latest
    steps:
      # Cache directory for trivy
      - uses: actions/cache@v3
        with:
          path: .trivy
          key: ${{ runner.os }}-trivy-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-trivy-

      - name: Checkout code
        uses: actions/checkout@v3 #tag=v3

      - name: Build an image from Dockerfile
        run: |
          docker build -t detect-secrets-image .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        with:
          image-ref: detect-secrets-image
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          cache-dir: .trivy
          exit-code: "1" # change to 1, if you want the build to break
          ignore-unfixed: true
          vuln-type: 'os,library'

      # https://github.com/aquasecurity/trivy-action/issues/12 for an explanation
      - name: Correct Trivy cache permissions
        run: sudo chown -R "$USER":"$GROUP" .trivy

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2 # tag=v2
        with:
          sarif_file: 'trivy-results.sarif'
